---
interface WorkItemProps {
  title: string;
  client: string;
  year: number;
  role: string[];
  video: string;
  size: "S" | "M" | "L";
}

const props = Astro.props as WorkItemProps;
const { title, client, year, role, video, size } = props;

const sizeClasses = {
  S: "col-span-1",
  M: "col-span-2",
  L: "col-span-3",
};
---

<div class={`work-item ${sizeClasses[size]}`}>
  <video class="work-item-bg-video" autoplay loop muted>
    <source src={video} type="video/mp4" />
  </video>
  <div class="work-item-content">
    <h3>{client}</h3>
    <p>{year}</p>
    <div class="role-pills">
      {role.map((r) => <span class="pill">{r}</span>)}
    </div>
  </div>
</div>

<style>
  .work-item {
    position: relative;
    border-radius: var(--radius-large);
    overflow: hidden;
    overflow: clip;

    aspect-ratio: 16 / 10;
    background: var(--last-color);

    transition: all 0.6s cubic-bezier(0.65, 0, 0.35, 1);
  }

  .work-item:hover {
    background: white;
  }

  .work-item-bg-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 0;
    filter: grayscale(1);
    mix-blend-mode: multiply;
    transform: scale(1.8) rotate(-12deg);

    transition: all 0.6s cubic-bezier(0.65, 0, 0.35, 1);
  }

  .work-item:hover .work-item-bg-video {
    filter: grayscale(0);
    mix-blend-mode: normal;
    transform: scale(1) rotate(0deg);

    transition: all 0.6s cubic-bezier(0.65, 0, 0.35, 1);
  }

  .work-item-content {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 1;

    color: #fff;
    padding: 1rem;
    background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));
    background-size: 1px 300px;
    transition: background 0.6s cubic-bezier(0.65, 0, 0.35, 1);
  }

  .work-item:hover .work-item-content {
    background-position: 100px;
  }

  .role-pills {
    display: flex;
    gap: 0.5rem;
  }

  .pill {
    background: #0070f3;
    padding: 0.5rem 1rem;
    border-radius: 999px;
  }
</style>
